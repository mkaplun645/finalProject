Attack Concerns + Technical Controls

----

Concern: Default Error Handling Can Expose Underlying Application Structure

Technical Controls:

    - Handle SQLAlchemy and Other Errors Using Custom UI Changes (Redirects, Red Error Messages)
    Instead of Default Error Handling
    - try / except exc.SQLAlchemyError as e:

----

Concern: Certain Endpoints / Routes Should Only Be Accessed By Authorized Users

Technical Controls:
    - Use "Flask-Login" Extension to Ensure That Users Are Logged In Before 
    Accessing Restricted Routes.
    - Use "werkzeug.security" To Generate / Check Password Hashes
    - Use "werkzeug.utils" To Ensure File Uploads Use Secure Filenames

----

Concern: Attackers Can Exploit Form Inputs / User Input To Conduct SQL Injection, Cross Site Scripting
(XSS), and Command Injection Attacks

Technical Controls: 

    - Form Validations to Check Presence / Length / Omission of Special Characters
    - WTF Forms 
        - {{ form.hidden_tag() }} CSRF Token
        - Default Parameterized Queries (form.username.data)